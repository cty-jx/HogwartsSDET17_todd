{"name": "add_-pythoncode_0", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str", "trace": "self = <test_Calculator.TestCalc object at 0x0000014DFA685588>\nget_instance = <pythoncode.Calculator.Calculator object at 0x0000014DFA6748C8>\nget_add_int_datas_with_fixture = ['-pythoncode', 0, '-pythoncode']\n\n    @allure.title(\"add_{get_add_int_datas_with_fixture[0]}_{get_add_int_datas_with_fixture[1]}\")\n    @allure.story(\"Add Integer Function\")\n    def test_add_int(self, get_instance, get_add_int_datas_with_fixture):\n        add_int = get_add_int_datas_with_fixture\n>       assert add_int[2] == get_instance.add(add_int[0], add_int[1])\n\ntest_Calculator.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pythoncode.Calculator.Calculator object at 0x0000014DFA6748C8>\na = '-pythoncode', b = 0\n\n    def add(self, a, b):\n        logger.info(f\"This case is to test {a} + {b}\")\n>       return a + b\nE       TypeError: can only concatenate str (not \"int\") to str\n\n..\\pythoncode\\Calculator.py:9: TypeError"}, "attachments": [{"name": "log", "source": "458500d8-136a-42a8-8e68-aaa397119659-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_add_int_datas_with_fixture", "value": "['-pythoncode', 0, '-pythoncode']"}], "start": 1612410897176, "stop": 1612410897176, "uuid": "be6382f7-145a-43fb-9dde-b1d94f52f7d6", "historyId": "402fa5bffd2c29a8dabc72c316cfe914", "testCaseId": "8e9bfd90a46b7bd1ef9b7050dd7c72c1", "fullName": "test_Calculator.TestCalc#test_add_int", "labels": [{"name": "story", "value": "Add Integer Function"}, {"name": "feature", "value": "计算器"}, {"name": "suite", "value": "test_Calculator"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "DESKTOP-ALON4FT"}, {"name": "thread", "value": "2112-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Calculator"}]}