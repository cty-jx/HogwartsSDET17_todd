{
  "uid" : "6d1ceaf366be0399",
  "name" : "div_0_pythoncode",
  "fullName" : "test_Calculator.TestCalc#test_div_int_normal",
  "historyId" : "30f6ebc46f9df43b224915c9ee8d6cdf",
  "time" : {
    "start" : 1612420386958,
    "stop" : 1612420386958,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "TypeError: unsupported operand type(s) for /: 'int' and 'str'",
  "statusTrace" : "self = <testing.test_Calculator.TestCalc object at 0x000001564F443348>, get_instance = <pythoncode.Calculator.Calculator object at 0x000001564F487688>, get_div_int_normal_datas_with_fixture = [0, 'pythoncode', 0]\n\n    @allure.title(\"div_{get_div_int_normal_datas_with_fixture[0]}_{get_div_int_normal_datas_with_fixture[1]}\")\n    @allure.story(\"div Integer normal Function\")\n    def test_div_int_normal(self, get_instance, get_div_int_normal_datas_with_fixture):\n        div_int_normal = get_div_int_normal_datas_with_fixture\n>       assert div_int_normal[2] == get_instance.div(div_int_normal[0], div_int_normal[1])\n\ntest_Calculator.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pythoncode.Calculator.Calculator object at 0x000001564F487688>, a = 0, b = 'pythoncode'\n\n    def div(self, a, b):\n        logger.info(f\"This case is to test {a} / {b}\")\n>       return a / b\nE       TypeError: unsupported operand type(s) for /: 'int' and 'str'\n\n..\\pythoncode\\Calculator.py:21: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_instance",
    "time" : {
      "start" : 1612420386958,
      "stop" : 1612420386958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "get_div_int_normal_datas_with_fixture",
    "time" : {
      "start" : 1612420386958,
      "stop" : 1612420386958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: unsupported operand type(s) for /: 'int' and 'str'",
    "statusTrace" : "self = <testing.test_Calculator.TestCalc object at 0x000001564F443348>, get_instance = <pythoncode.Calculator.Calculator object at 0x000001564F487688>, get_div_int_normal_datas_with_fixture = [0, 'pythoncode', 0]\n\n    @allure.title(\"div_{get_div_int_normal_datas_with_fixture[0]}_{get_div_int_normal_datas_with_fixture[1]}\")\n    @allure.story(\"div Integer normal Function\")\n    def test_div_int_normal(self, get_instance, get_div_int_normal_datas_with_fixture):\n        div_int_normal = get_div_int_normal_datas_with_fixture\n>       assert div_int_normal[2] == get_instance.div(div_int_normal[0], div_int_normal[1])\n\ntest_Calculator.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pythoncode.Calculator.Calculator object at 0x000001564F487688>, a = 0, b = 'pythoncode'\n\n    def div(self, a, b):\n        logger.info(f\"This case is to test {a} / {b}\")\n>       return a / b\nE       TypeError: unsupported operand type(s) for /: 'int' and 'str'\n\n..\\pythoncode\\Calculator.py:21: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "73c2779c5f72d6ed",
      "name" : "log",
      "source" : "73c2779c5f72d6ed.txt",
      "type" : "text/plain",
      "size" : 73
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "get_instance::0",
    "time" : {
      "start" : 1612420386963,
      "stop" : 1612420386963,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "div Integer normal Function"
  }, {
    "name" : "feature",
    "value" : "计算器"
  }, {
    "name" : "suite",
    "value" : "test_Calculator"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "DESKTOP-ALON4FT"
  }, {
    "name" : "thread",
    "value" : "10176-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_Calculator"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_div_int_normal_datas_with_fixture",
    "value" : "[0, 'pythoncode', 0]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6d1ceaf366be0399.json",
  "parameterValues" : [ "[0, 'pythoncode', 0]" ]
}